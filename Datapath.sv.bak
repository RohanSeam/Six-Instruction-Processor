// TCES 330: Project B
// Rohan Seam & Trung Do
//
// This module is to implement the datapath that will instantiate the data memory, the 2 to 1
// MUX, the register file, and the ALU modules. 
module Datapath(Clock, D_Addr, D_Wr, RF_s, RF_W_Addr, RF_W_en, RF_Ra_Addr, 
					 RF_Rb_Addr, ALU_s0, ALU_inA, ALU_inB, ALU_out);
	
	input Clock;
	input D_Wr, RF_s, RF_W_en;
	input [7:0] D_Addr;
	input [3:0] RF_W_Addr, RF_Ra_Addr, RF_Rb_Addr;
	input [2:0] ALU_s0;
	
	output [15:0] ALU_inA, ALU_inB, ALU_out;
	logic [15:0] mux_out;											// Output from the 2 to 1 MUX
	
	// Instantiate the Register (16x16)
	// Register(Clk, write, W_addr, W_data, Ra_addr, Ra_data, Rb_addr, Rb_data);
	Register R1(Clock, RF_W_en, RF_W_Addr, mux_out, RF_Ra_Addr, ALU_inA, RF_Rb_Addr, ALU_inB);
	
	// Instantiate the MUX (2 to 1)
	// mux_16w_2_to_1(s, A, B, Q);
	mux_16w_2_to_1 m1(RF_s, /*XXXX*/, ALU_out, mux_out);
	
	// Instantiate the Data Memory (256x16)
	
	// Instantiate the ALU 
	// ALU(A, B, Sel, Q);
	ALU A1(ALU_inA, ALU_inB, ALU_s0, ALU_out);
	
endmodule 

// Testbench
module Datapath_testbench();
	logic Clock;
	logic D_Wr, RF_s, RF_W_en;
	logic [7:0] D_Addr;
	logic [3:0] RF_W_Addr, RF_Ra_Addr, RF_Rb_Addr;
	logic [2:0] ALU_s0;
	logic [15:0] ALU_inA, ALU_inB, ALU_out;
	
	// Instantiate the data path
	Datapath(Clock, D_Addr, D_Wr, RF_s, RF_W_Addr, RF_W_en, RF_Ra_Addr, 
					 RF_Rb_Addr, ALU_s0, ALU_inA, ALU_inB, ALU_out);
					 
	// Clock signal
	always begin  	
		Clock = 0;  	
		#10;  	
		Clock = 1;  	
		#10;  
	end 
	
	initial begin
	
	end
endmodule 